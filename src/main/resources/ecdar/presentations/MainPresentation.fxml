<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.shape.Rectangle?>
<?import org.kordamp.ikonli.javafx.FontIcon?>
<?import com.jfoenix.controls.JFXButton?>
<?import com.jfoenix.controls.JFXDialog?>
<?import javafx.scene.text.Text?>
<?import com.jfoenix.controls.JFXRippler?>
<?import com.jfoenix.controls.JFXTabPane?>
<?import com.jfoenix.controls.JFXSpinner?>
<?import com.jfoenix.controls.JFXDialogLayout?>
<?import javafx.scene.text.TextFlow?>
<?import ecdar.Ecdar?>
<fx:root xmlns="http://javafx.com/javafx"
         xmlns:fx="http://javafx.com/fxml"
         fx:id="root"
         fx:controller="ecdar.controllers.MainController"
         type="StackPane">


    <BorderPane fx:id="borderPane">

        <center>
            <HBox fx:id="centerContainer" />
        </center>

        <!-- Query pane -->
        <right>
            <Label fx:id="queryPaneFillerElement"/>
        </right>

        <!-- File pane -->
        <left>
            <Label fx:id="filePaneFillerElement"/>
        </left>

        <!-- Message container -->
        <bottom>
            <Rectangle fx:id="bottomFillerElement"/>
        </bottom>

        <top>
            <!-- Menu bar for "file" etc (only visible on windows) -->
            <MenuBar fx:id="menuBar">

                <Menu text="File">
                    <MenuItem fx:id="menuBarFileCreateNewProject" text="New Project">
                        <graphic>
                            <FontIcon iconLiteral="gmi-create-new-folder" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarFileOpenProject" text="Open Project">
                        <graphic>
                            <FontIcon iconLiteral="gmi-folder-open" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>

                    <SeparatorMenuItem/>

                    <MenuItem fx:id="menuBarFileSave" text="Save Project">
                        <graphic>
                            <FontIcon iconLiteral="gmi-save" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarFileSaveAs" text="Save Project as">
                        <graphic>
                            <FontIcon iconLiteral="gmi-save" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>

                    <SeparatorMenuItem/>

                    <MenuItem fx:id="menuBarFileNewMutationTestObject" text="New Test Plan">
                        <graphic>
                            <FontIcon iconLiteral="gmi-done-all" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>

                    <SeparatorMenuItem/>

                    <MenuItem fx:id="menuBarFileExportAsPng" text="Export as Png">
                        <graphic>
                            <FontIcon iconLiteral="gmi-image" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarFileExportAsPngNoBorder" text="Export without border as Png">
                        <graphic>
                            <FontIcon iconLiteral="gmi-image" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                </Menu>


                <Menu text="Edit">
                    <MenuItem fx:id="menuEditMoveLeft" text="Move All Nodes Left">
                        <graphic>
                            <FontIcon iconLiteral="gmi-keyboard-arrow-left" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuEditMoveUp" text="Move All Nodes Up">
                        <graphic>
                            <FontIcon iconLiteral="gmi-keyboard-arrow-up" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuEditMoveRight" text="Move All Nodes Right">
                        <graphic>
                            <FontIcon iconLiteral="gmi-keyboard-arrow-right" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuEditMoveDown" text="Move All Nodes Down">
                        <graphic>
                            <FontIcon iconLiteral="gmi-keyboard-arrow-down" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                </Menu>


                <Menu text="View">
                    <MenuItem fx:id="menuBarViewFilePanel" text="Project Panel">
                        <graphic>
                            <FontIcon iconLiteral="gmi-check" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewQueryPanel" text="Query Panel">
                        <graphic>
                            <FontIcon iconLiteral="gmi-check" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewHome" text="Home">
                        <graphic>
                            <FontIcon iconLiteral="gmi-home" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewSim" text="Simulator">
                        <graphic>
                            <FontIcon iconLiteral="gmi-play-circle-outline" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewSimLeftPanel" text="Simulator Left Panel">
                        <graphic>
                            <FontIcon iconLiteral="gmi-check" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewSimRightPanel" text="Simulator Right Panel">
                        <graphic>
                            <FontIcon iconLiteral="gmi-check" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewGrid" text="Grid">
                        <graphic>
                            <FontIcon iconLiteral="gmi-check" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarViewCanvasSplit" text="Split canvas">
                        <graphic>
                            <FontIcon iconLiteral="gmi-border-all" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>

                    <SeparatorMenuItem/>

                    <MenuItem fx:id="menuBarZoomInSimulator" text="Zoom in">
                        <graphic>
                            <FontIcon iconLiteral="gmi-zoom-in" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarZoomOutSimulator" text="Zoom out">
                        <graphic>
                            <FontIcon iconLiteral="gmi-zoom-out" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarZoomResetSimulator" text="Reset zoom">
                        <graphic>
                            <FontIcon iconLiteral="gmi-youtube-searched-for" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                </Menu>

                <Menu text="Options">
                    <MenuItem fx:id="menuBarOptionsCache" text="UI Cache">
                        <graphic>
                            <FontIcon iconLiteral="gmi-check" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                </Menu>

                <Menu text="Help">
                    <MenuItem fx:id="menuBarHelpHelp" text="Modelling Help">
                        <graphic>
                            <FontIcon iconLiteral="gmi-help" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarHelpTest" text="Testing Help">
                        <graphic>
                            <FontIcon iconLiteral="gmi-help" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                    <MenuItem fx:id="menuBarHelpAbout" text="About">
                        <graphic>
                            <FontIcon iconLiteral="gmi-info" iconSize="24" fill="black"/>
                        </graphic>
                    </MenuItem>
                </Menu>

            </MenuBar>
        </top>
    </BorderPane>

    <!-- Message container -->
    <StackPane fx:id="tabPaneContainer" maxHeight="35"
               StackPane.alignment="BOTTOM_CENTER"
               style="-fx-padding: 0 0 20 0">
        <JFXTabPane fx:id="tabPane" style="-fx-background-color: -grey-200;">

            <Tab fx:id="backendErrorsTab" text="Backend Errors">
                <ScrollPane fx:id="backendErrorsScrollPane"
                            fitToHeight="true" fitToWidth="true"
                            styleClass="edge-to-edge">
                    <VBox fx:id="backendErrorsList" style="-fx-padding: 10"/>
                </ScrollPane>
            </Tab>

            <Tab fx:id="errorsTab" text="Errors">
                <ScrollPane fx:id="errorsScrollPane"
                            fitToHeight="true" fitToWidth="true"
                            styleClass="edge-to-edge">
                    <VBox fx:id="errorsList" style="-fx-padding: 10"/>
                </ScrollPane>
            </Tab>

            <Tab fx:id="warningsTab" text="Warnings">
                <ScrollPane fx:id="warningsScrollPane"
                            fitToHeight="true" fitToWidth="true"
                            styleClass="edge-to-edge">
                    <VBox fx:id="warningsList" style="-fx-padding: 10"/>
                </ScrollPane>
            </Tab>

        </JFXTabPane>

        <HBox maxHeight="35" StackPane.alignment="TOP_CENTER" pickOnBounds="false">
            <Region HBox.hgrow="ALWAYS" mouseTransparent="true"/>

            <JFXRippler fx:id="collapseMessages">
                <StackPane minWidth="50" minHeight="35"
                           onMouseClicked="#collapseMessagesClicked"
                           StackPane.alignment="TOP_RIGHT">

                    <FontIcon fx:id="collapseMessagesIcon" iconLiteral="gmi-expand-less" iconSize="24" fill="white"/>

                </StackPane>
            </JFXRippler>
        </HBox>

        <Rectangle fx:id="tabPaneResizeElement"
                   onMousePressed="#tabPaneResizeElementPressed"
                   onMouseDragged="#tabPaneResizeElementDragged"
                   width="500" height="3"
                   fill="transparent" StackPane.alignment="TOP_CENTER"/>
    </StackPane>

    <!-- Status container -->
    <HBox minHeight="20" maxHeight="20" StackPane.alignment="BOTTOM_CENTER"
          fx:id="statusBar"
          style="-fx-padding: 0 10 0 10">

        <StackPane>
            <Label fx:id="statusLabel" styleClass="sub-caption"/>
        </StackPane>

        <Region HBox.hgrow="ALWAYS"/>

        <HBox fx:id="queryStatusContainer" opacity="0">
            <StackPane>
                <JFXSpinner radius="5"/>
            </StackPane>

            <Region minWidth="5"/>

            <StackPane>
                <Label fx:id="queryLabel" styleClass="sub-caption"/>
            </StackPane>
        </HBox>

    </HBox>

    <!-- Query Result Dialog -->
    <StackPane fx:id="queryDialogContainer" style="-fx-background-color: #0000007F;" mouseTransparent="true">
        <JFXDialog fx:id="queryDialog">

            <VBox>

                <!-- Will scale the dialog -->
                <Region minWidth="400"/>

                <!-- Content -->
                <VBox>

                    <VBox style="-fx-padding: 24px;">
                        <Text text="Query Result" styleClass="title"/>

                        <Region minHeight="20"/>

                        <Text text="Query" styleClass="body2"/>
                        <Text fx:id="queryTextQuery" text="No query" styleClass="body1"/>

                        <Region minHeight="20"/>

                        <Text text="Result" styleClass="body2"/>
                        <Text fx:id="queryTextResult" text="No result" styleClass="body1"/>

                    </VBox>

                    <HBox style="-fx-padding: 8px;">
                        <Region HBox.hgrow="ALWAYS"/>
                        <JFXButton text="CLOSE" onMouseClicked="#closeDialog"/>
                    </HBox>

                </VBox>

            </VBox>

        </JFXDialog>
    </StackPane>

    <!-- Modelling help dialog -->
    <StackPane fx:id="dialogContainer" style="-fx-background-color: #0000007F;" visible="false">
        <JFXDialog fx:id="dialog">

            <VBox>

                <!-- Scale dialog -->
                <Region minWidth="400"/>

                <StackPane fx:id="modalBar" style="-fx-background-color: -blue-grey-800;">

                </StackPane>

                <!-- Content -->
                <VBox>

                    <VBox style="-fx-padding: 24px;">
                        <Text text="Help" styleClass="title"/>

                        <Region minHeight="20"/>

                        <HBox>
                            <StackPane fx:id="helpInitialPane" minWidth="60" maxWidth="60" minHeight="30" maxHeight="30">
                                <ImageView fx:id="helpInitialImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 5 0 0 5">
                                This is an initial location.
                            </Label>
                        </HBox>

                        <Region minHeight="4"/>

                        <HBox>
                            <StackPane fx:id="helpUrgentPane" minWidth="60" maxWidth="60" minHeight="30" maxHeight="30">
                                <ImageView fx:id="helpUrgentImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 5 0 0 5">
                                This is an urgent location.
                            </Label>
                        </HBox>

                        <Region minHeight="4"/>

                        <HBox>
                            <StackPane fx:id="helpInputPane" minWidth="60" maxWidth="60" minHeight="30" maxHeight="30">
                                <ImageView fx:id="helpInputImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 5 0 0 5">
                                This is an input edge.
                            </Label>
                        </HBox>

                        <Region minHeight="4"/>

                        <HBox>
                            <StackPane fx:id="helpOutputPane" minWidth="60" maxWidth="60" minHeight="30" maxHeight="30">
                                <ImageView fx:id="helpOutputImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 5 0 0 5">
                                This is an output edge.
                            </Label>
                        </HBox>

                        <Region minHeight="16"/>
                        <HBox minHeight="1" style="-fx-background-color: #eee;"/>
                        <Region minHeight="16"/>

                        <HBox>
                            <Label styleClass="body2">
                                Shift-click and middle-click:
                            </Label>
                            <Region minWidth="8"/>
                            <Label styleClass="body1">
                                Adds locations and draws edges
                            </Label>
                        </HBox>

                        <Region minHeight="8"/>

                        <HBox>
                            <Label styleClass="body2">
                                Right-click:
                            </Label>
                            <Region minWidth="8"/>
                            <Label styleClass="body1">
                                Opens context menus
                            </Label>
                        </HBox>
                    </VBox>

                    <HBox style="-fx-padding: 8px;">
                        <Region HBox.hgrow="ALWAYS"/>
                        <JFXButton text="CLOSE" onMouseClicked="#closeDialog"/>
                    </HBox>

                </VBox>

            </VBox>

        </JFXDialog>
    </StackPane>

    <!-- Mutation Testing help dialog -->
    <StackPane fx:id="testHelpContainer" style="-fx-background-color: #0000007F;" visible="false">
        <JFXDialog fx:id="testHelpDialog">
            <JFXDialogLayout prefWidth="600">
                <heading>
                    <Label>Mutation Testing</Label>
                </heading>
                <body>
                    <VBox spacing="4">
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">
                            Ecdar offers a simple way to test if a system conforms to a model.
                            All you need is a jar file interfacing to your system, and an Ecdar model.
                            To start testing, go to File → New Test Plan and follow the instructions.
                        </Label>
                        <TextFlow>
                            <Text style="-fx-text-fill: black;-fx-font-size: 10pt;">
                                The jar file should read synchronisation inputs and write synchronisation outputs using
                                the standard I/O streams (System.in and System.out).
                                Synchronisations are separated with a newline.
                                For instance, the program could read an input with&#160;
                            </Text>
                            <Text style="-fx-text-fill: black;-fx-font-size: 10pt;-fx-font-family: monospace;">
                                (new BufferedReader(new InputStreamReader(System.in))).readLine();
                            </Text>
                            <Text style="-fx-text-fill: black;-fx-font-size: 10pt;">
                                &#160;and output&#160;
                            </Text>
                            <Text style="-fx-text-fill: black;-fx-font-size: 10pt;-fx-font-family: monospace;">
                                cof
                            </Text>
                            <Text style="-fx-text-fill: black;-fx-font-size: 10pt;">
                                &#160;with&#160;
                            </Text>
                            <Text style="-fx-text-fill: black;-fx-font-size: 10pt;-fx-font-family: monospace;">
                                System.out.println("cof");
                            </Text>
                        </TextFlow>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">
                            Testing supports both testing using real-time and simulated time (For more information on how to set up your system to use simulated time, read the tooltip on simulated time in a test plan).
                        </Label>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">
                            Happy testing!
                        </Label>
                    </VBox>
                </body>
                <actions>
                    <JFXButton fx:id="testHelpAcceptButton" styleClass="dialog-accept">CLOSE</JFXButton>
                </actions>
            </JFXDialogLayout>
        </JFXDialog>
    </StackPane>

    <!-- Mutation Testing help dialog -->
    <StackPane fx:id="aboutContainer" style="-fx-background-color: #0000007F;" visible="false">
        <JFXDialog fx:id="aboutDialog">
            <JFXDialogLayout>
                <heading>
                    <HBox>
                        <Label>Ecdar&#160;</Label>
                        <Label><Ecdar fx:constant="VERSION"/></Label>
                    </HBox>
                </heading>
                <body>
                    <VBox>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">Made by:</Label>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">Casper Møller Bartholomæussen</Label>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">Tobias Rosenkrantz Gundersen</Label>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">Rene Mejer Lauritsen</Label>
                        <Label style="-fx-text-fill: black;-fx-font-size: 10pt;">Christian Ovesen</Label>
                    </VBox>
                </body>
                <actions>
                    <JFXButton fx:id="aboutAcceptButton" styleClass="dialog-accept">CLOSE</JFXButton>
                </actions>
            </JFXDialogLayout>
        </JFXDialog>
    </StackPane>

    <StackPane fx:id="reloadDialogContainer" style="-fx-background-color: #0000007F;" mouseTransparent="true">
        <JFXDialog fx:id="reloadSimulatorDialog">
            <VBox>
                <!-- Will scale the dialog -->
                <Region minWidth="400"/>
                <!-- Content -->
                <VBox>
                    <VBox style="-fx-padding: 24px;">
                        <Text text="Reload System" styleClass="title"/>

                        <Region minHeight="20"/>

                        <Text text="You are about to reload the system. This action resets the current simulation and loads a new system."
                              styleClass="body1"/>

                        <Region minHeight="20"/>

                        <Text text="Do you want to reload the system?" styleClass="body2"/>
                    </VBox>

                    <HBox style="-fx-padding: 8px;">
                        <Region HBox.hgrow="ALWAYS"/>
                        <JFXButton text="OK" onMouseClicked="#okReloadSimulatorDialog"/>
                        <JFXButton text="CANCEL" onMouseClicked="#cancelReloadSimulatorDialog"/>
                    </HBox>
                </VBox>

            </VBox>

        </JFXDialog>
    </StackPane>
</fx:root>
