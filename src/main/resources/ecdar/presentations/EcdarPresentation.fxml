<?xml version="1.0" encoding="UTF-8"?>

<?import com.jfoenix.controls.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.shape.Rectangle?>
<?import javafx.scene.text.Text?>
<?import org.kordamp.ikonli.javafx.*?>
<?import ecdar.presentations.*?>
<?import ecdar.Ecdar?>
<?import javafx.scene.text.TextFlow?>
<?import javafx.geometry.Insets?>
<fx:root xmlns:fx="http://javafx.com/fxml/1"
         xmlns="http://javafx.com/javafx/8.0.76-ea"
         type="StackPane"
         fx:id="root"
         fx:controller="ecdar.controllers.EcdarController">
    <BorderPane fx:id="borderPane">
        <center>
            <VBox alignment="TOP_CENTER">
                <!-- Max height is set to -Infinity to avoid toolbar from intercepting all mouse events on the canvas -->
                <VBox maxHeight="-Infinity">
                    <HBox fx:id="toolbar" HBox.hgrow="ALWAYS">
                        <padding>
                            <Insets topRightBottomLeft="10"/>
                        </padding>
                        <HBox alignment="CENTER_LEFT" HBox.hgrow="ALWAYS">
                            <!-- UNDO -->
                            <JFXRippler fx:id="undo">
                                <StackPane styleClass="responsive-icon-stack-pane-sizing"
                                           onMouseClicked="#undoClicked">
                                    <FontIcon iconLiteral="gmi-undo" fill="white" styleClass="icon-size-medium"/>
                                </StackPane>
                            </JFXRippler>

                            <Region minWidth="8"/>

                            <!-- REDO -->
                            <JFXRippler fx:id="redo">
                                <StackPane styleClass="responsive-icon-stack-pane-sizing"
                                           onMouseClicked="#redoClicked">
                                    <FontIcon iconLiteral="gmi-redo" fill="white" styleClass="icon-size-medium"/>
                                </StackPane>
                            </JFXRippler>

                            <Region minWidth="16"/>

                            <!-- Switch between input and output edges -->
                            <HBox alignment="CENTER" spacing="-5" style="-fx-padding: -1em 0em -1em 0em;">
                                <JFXButton fx:id="switchToInputButton" text="Input" textFill="white"
                                           onMouseClicked="#switchToInputClicked"
                                           styleClass="button" style="-fx-padding: 0.5em 1em 0.5em 1em"/>
                                <JFXToggleButton fx:id="switchEdgeStatusButton"
                                                 onMouseClicked="#switchEdgeStatusClicked"
                                                 styleClass="toggle-button"/>
                                <JFXButton fx:id="switchToOutputButton" text="Output" textFill="grey"
                                           onMouseClicked="#switchToOutputClicked"
                                           styleClass="button" style="-fx-padding: 0.5em 1em 0.5em 1em"/>
                            </HBox>
                        </HBox>
                        <HBox alignment="CENTER_RIGHT">
                            <!-- DELETE SELECTED -->
                            <JFXRippler fx:id="deleteSelected">
                                <StackPane styleClass="responsive-icon-stack-pane-sizing"
                                           onMouseClicked="#deleteSelectedClicked">
                                    <FontIcon iconLiteral="gmi-delete" fill="white" styleClass="icon-size-medium"/>
                                </StackPane>
                            </JFXRippler>

                            <Region minWidth="8"/>

                            <!-- COLOR SELECTED -->
                            <JFXRippler fx:id="colorSelected">
                                <StackPane styleClass="responsive-icon-stack-pane-sizing">
                                    <FontIcon iconLiteral="gmi-color-lens" fill="white"
                                              styleClass="icon-size-medium"/>
                                </StackPane>
                            </JFXRippler>
                        </HBox>
                    </HBox>
                </VBox>
                <StackPane fx:id="canvasPane" HBox.hgrow="NEVER" VBox.vgrow="NEVER">
                    <!-- Canvases go here -->
                </StackPane>
            </VBox>
        </center>

        <!-- File pane -->
        <left>
            <StackPane fx:id="leftPane" alignment="TOP_LEFT">
                <ProjectPanePresentation
                        fx:id="filePane"
                        StackPane.alignment="TOP_LEFT"/>
            </StackPane>
        </left>

        <!-- Query pane -->
        <right>
            <StackPane fx:id="rightPane" alignment="TOP_RIGHT">
                <QueryPanePresentation
                        fx:id="queryPane"
                        StackPane.alignment="TOP_RIGHT"/>
            </StackPane>
        </right>

        <!-- Message container -->
        <bottom>
            <Rectangle fx:id="bottomFillerElement"/>
        </bottom>

        <top>
            <StackPane fx:id="topPane" alignment="BOTTOM_CENTER">
                <!-- Menu bar for "file" etc. (only visible on windows) -->
                <MenuBar fx:id="menuBar">
                    <Menu text="File">
                        <MenuItem fx:id="menuBarFileCreateNewProject" text="New Project">
                            <graphic>
                                <FontIcon iconLiteral="gmi-create-new-folder" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarFileOpenProject" text="Open Project">
                            <graphic>
                                <FontIcon iconLiteral="gmi-folder-open" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <Menu fx:id="menuBarFileRecentProjects" text="Recent Projects">
                            <graphic>
                                <FontIcon iconLiteral="gmi-folder-open" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </Menu>

                        <SeparatorMenuItem/>

                        <MenuItem fx:id="menuBarFileSave" text="Save Project">
                            <graphic>
                                <FontIcon iconLiteral="gmi-save" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarFileSaveAs" text="Save Project as">
                            <graphic>
                                <FontIcon iconLiteral="gmi-save" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>

                        <SeparatorMenuItem/>

                        <MenuItem fx:id="menuBarFileNewMutationTestObject" text="New Test Plan">
                            <graphic>
                                <FontIcon iconLiteral="gmi-done-all" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>

                        <SeparatorMenuItem/>

                        <MenuItem fx:id="menuBarFileExportAsPng" text="Export as Png">
                            <graphic>
                                <FontIcon iconLiteral="gmi-image" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarFileExportAsPngNoBorder" text="Export without border as Png">
                            <graphic>
                                <FontIcon iconLiteral="gmi-image" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                    </Menu>

                    <Menu text="Edit">
                        <MenuItem fx:id="menuEditMoveLeft" text="Move All Nodes Left">
                            <graphic>
                                <FontIcon iconLiteral="gmi-keyboard-arrow-left" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuEditMoveUp" text="Move All Nodes Up">
                            <graphic>
                                <FontIcon iconLiteral="gmi-keyboard-arrow-up" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuEditMoveRight" text="Move All Nodes Right">
                            <graphic>
                                <FontIcon iconLiteral="gmi-keyboard-arrow-right" fill="black"
                                          styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuEditMoveDown" text="Move All Nodes Down">
                            <graphic>
                                <FontIcon iconLiteral="gmi-keyboard-arrow-down" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                    </Menu>

                    <Menu text="View">
                        <MenuItem fx:id="menuBarViewFilePanel" text="Project Panel">
                            <graphic>
                                <FontIcon iconLiteral="gmi-check" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarViewQueryPanel" text="Query Panel">
                            <graphic>
                                <FontIcon iconLiteral="gmi-check" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarAutoscaling" text="Autoscaling">
                            <graphic>
                                <FontIcon iconLiteral="gmi-check" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>

                        <Menu text="Scaling" fx:id="menuViewMenuScaling">
                            <fx:define>
                                <ToggleGroup fx:id="scaling"/>
                            </fx:define>
                            <RadioMenuItem fx:id="scaleXS" toggleGroup="$scaling" text="0.5x">
                                <properties scale="0.5"/>
                            </RadioMenuItem>
                            <RadioMenuItem fx:id="scaleS" toggleGroup="$scaling" text="0.75x">
                                <properties scale="0.75"/>
                            </RadioMenuItem>
                            <RadioMenuItem fx:id="scaleM" toggleGroup="$scaling" text="1.0x">
                                <properties scale="1.0"/>
                            </RadioMenuItem>
                            <RadioMenuItem fx:id="scaleL" toggleGroup="$scaling" text="1.25x">
                                <properties scale="1.25"/>
                            </RadioMenuItem>
                            <RadioMenuItem fx:id="scaleXL" toggleGroup="$scaling" text="1.5x">
                                <properties scale="1.5"/>
                            </RadioMenuItem>
                            <RadioMenuItem fx:id="scaleXXL" toggleGroup="$scaling" text="1.75x">
                                <properties scale="1.75"/>
                            </RadioMenuItem>
                            <RadioMenuItem fx:id="scaleXXXL" toggleGroup="$scaling" text="2.0x">
                                <properties scale="2.0"/>
                            </RadioMenuItem>
                        </Menu>

                        <SeparatorMenuItem/>

                        <MenuItem fx:id="menuBarViewCanvasSplit" text="Split canvas">
                            <graphic>
                                <FontIcon iconLiteral="gmi-border-all" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                    </Menu>

                    <Menu text="Options">
                        <MenuItem fx:id="menuBarOptionsCache" text="UI Cache">
                            <graphic>
                                <FontIcon iconLiteral="gmi-check" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>

                        <MenuItem fx:id="menuBarOptionsBackgroundQueries" text="Periodic query execution">
                            <graphic>
                                <FontIcon iconLiteral="gmi-check" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>

                        <SeparatorMenuItem/>

                        <MenuItem fx:id="menuBarOptionsBackendOptions" text="Backend options">
                            <graphic>
                                <FontIcon iconLiteral="gmi-settings-input-component" styleClass="icon-size-medium"
                                          fill="black"/>
                            </graphic>
                        </MenuItem>
                    </Menu>

                    <Menu text="Help">
                        <MenuItem fx:id="menuBarHelpHelp" text="Modelling Help">
                            <graphic>
                                <FontIcon iconLiteral="gmi-help" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarHelpTest" text="Testing Help">
                            <graphic>
                                <FontIcon iconLiteral="gmi-help" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                        <MenuItem fx:id="menuBarHelpAbout" text="About">
                            <graphic>
                                <FontIcon iconLiteral="gmi-info" fill="black" styleClass="icon-size-medium"/>
                            </graphic>
                        </MenuItem>
                    </Menu>
                </MenuBar>
            </StackPane>
        </top>
    </BorderPane>

    <!-- Message container -->
    <MessageTabPanePresentation fx:id="messageTabPane" StackPane.alignment="BOTTOM_CENTER"/>

    <!-- Status container -->
    <HBox minHeight="20" maxHeight="20" StackPane.alignment="BOTTOM_CENTER"
          fx:id="statusBar"
          style="-fx-padding: 0em 0.8em 0em 0.8em">

        <StackPane>
            <Label fx:id="statusLabel" styleClass="sub-caption"/>
        </StackPane>

        <Region HBox.hgrow="ALWAYS"/>

        <HBox fx:id="queryStatusContainer" opacity="0">
            <StackPane>
                <JFXSpinner radius="5"/>
            </StackPane>

            <Region minWidth="5"/>

            <StackPane>
                <Label fx:id="queryLabel" styleClass="sub-caption"/>
            </StackPane>
        </HBox>
    </HBox>

    <!-- Query Result Dialog -->
    <StackPane fx:id="queryDialogContainer" style="-fx-background-color: #0000007F;" mouseTransparent="true">
        <JFXDialog fx:id="queryDialog">
            <VBox>
                <!-- Will scale the dialog -->
                <Region minWidth="400"/>

                <!-- Content -->
                <VBox>
                    <VBox style="-fx-padding: 1.6em;">
                        <Text text="Query Result" styleClass="title"/>

                        <Region minHeight="20"/>

                        <Text text="Query" styleClass="body2"/>
                        <Text fx:id="queryTextQuery" text="No query" styleClass="body1"/>

                        <Region minHeight="20"/>

                        <Text text="Result" styleClass="body2"/>
                        <Text fx:id="queryTextResult" text="No result" styleClass="body1"/>
                    </VBox>

                    <HBox style="-fx-padding: 0.5em;">
                        <Region HBox.hgrow="ALWAYS"/>
                        <JFXButton text="CLOSE" onMouseClicked="#closeQueryDialog"/>
                    </HBox>
                </VBox>
            </VBox>
        </JFXDialog>
    </StackPane>

    <!-- Modelling help dialog -->
    <StackPane fx:id="dialogContainer" style="-fx-background-color: #0000007F;" visible="false">
        <JFXDialog fx:id="dialog">
            <VBox>
                <!-- Scale dialog -->
                <Region minWidth="400"/>

                <StackPane fx:id="modalBar" style="-fx-background-color: -blue-grey-800;">

                </StackPane>

                <!-- Content -->
                <VBox>
                    <VBox style="-fx-padding: 1.6em;">
                        <Text text="Help" styleClass="title"/>

                        <Region minHeight="20"/>

                        <HBox>
                            <StackPane fx:id="helpInitialPane" styleClass="responsive-large-image-sizing">
                                <ImageView fx:id="helpInitialImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 0.4em 0em 0em 0.4em">
                                This is an initial location.
                            </Label>
                        </HBox>

                        <Region minHeight="4"/>

                        <HBox>
                            <StackPane fx:id="helpUrgentPane" styleClass="responsive-large-image-sizing">
                                <ImageView fx:id="helpUrgentImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 0.4em 0em 0em 0.4em">
                                This is an urgent location.
                            </Label>
                        </HBox>

                        <Region minHeight="4"/>

                        <HBox>
                            <StackPane fx:id="helpInputPane" styleClass="responsive-large-image-sizing">
                                <ImageView fx:id="helpInputImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 0.4em 0em 0em 0.4em">
                                This is an input edge.
                            </Label>
                        </HBox>

                        <Region minHeight="4"/>

                        <HBox>
                            <StackPane fx:id="helpOutputPane" styleClass="responsive-large-image-sizing">
                                <ImageView fx:id="helpOutputImage"/>
                            </StackPane>
                            <Label styleClass="body1" style="-fx-padding: 0.4em 0em 0em 0.4em">
                                This is an output edge.
                            </Label>
                        </HBox>

                        <Region minHeight="16"/>
                        <HBox minHeight="1" style="-fx-background-color: #eee;"/>
                        <Region minHeight="16"/>

                        <HBox>
                            <Label styleClass="body2">
                                Shift-click and middle-click:
                            </Label>
                            <Region minWidth="8"/>
                            <Label styleClass="body1">
                                Adds locations and draws edges
                            </Label>
                        </HBox>

                        <Region minHeight="8"/>

                        <HBox>
                            <Label styleClass="body2">
                                Right-click:
                            </Label>
                            <Region minWidth="8"/>
                            <Label styleClass="body1">
                                Opens context menus
                            </Label>
                        </HBox>
                    </VBox>

                    <HBox style="-fx-padding: 0.5em;">
                        <Region HBox.hgrow="ALWAYS"/>
                        <JFXButton text="CLOSE" onMouseClicked="#closeQueryDialog"/>
                    </HBox>
                </VBox>
            </VBox>
        </JFXDialog>
    </StackPane>

    <!-- Mutation Testing help dialog -->
    <StackPane fx:id="testHelpContainer" style="-fx-background-color: #0000007F;" visible="false">
        <JFXDialog fx:id="testHelpDialog">
            <JFXDialogLayout prefWidth="600">
                <heading>
                    <Label>Mutation Testing</Label>
                </heading>
                <body>
                    <VBox spacing="4">
                        <Label styleClass="body1" style="-fx-text-fill: black;">
                            Ecdar offers a simple way to test if a system conforms to a model.
                            All you need is a jar file interfacing to your system, and an Ecdar model.
                            To start testing, go to File → New Test Plan and follow the instructions.
                        </Label>
                        <TextFlow>
                            <Text styleClass="body1">
                                The jar file should read synchronisation inputs and write synchronisation outputs using
                                the standard I/O streams (System.in and System.out).
                                Synchronisations are separated with a newline.
                                For instance, the program could read an input with&#160;
                            </Text>
                            <Text styleClass="body1" style="-fx-font-family: monospace;">
                                (new BufferedReader(new InputStreamReader(System.in))).readLine();
                            </Text>
                            <Text styleClass="body1">
                                &#160;and output&#160;
                            </Text>
                            <Text styleClass="body1" style="-fx-font-family: monospace;">
                                cof
                            </Text>
                            <Text styleClass="body1">
                                &#160;with&#160;
                            </Text>
                            <Text styleClass="body1" style="-fx-font-family: monospace;">
                                System.out.println("cof");
                            </Text>
                        </TextFlow>
                        <Label styleClass="body1" style="-fx-text-fill: black;">
                            Testing supports both testing using real-time and simulated time (For more information on
                            how to set up your system to use simulated time, read the tooltip on simulated time in a
                            test plan).
                        </Label>
                        <Label styleClass="body1" style="-fx-text-fill: black;">
                            Happy testing!
                        </Label>
                    </VBox>
                </body>
                <actions>
                    <JFXButton fx:id="testHelpAcceptButton" styleClass="dialog-accept">CLOSE</JFXButton>
                </actions>
            </JFXDialogLayout>
        </JFXDialog>
    </StackPane>

    <!-- About dialog -->
    <StackPane fx:id="aboutContainer" style="-fx-background-color: #0000007F;" visible="false">
        <JFXDialog fx:id="aboutDialog">
            <JFXDialogLayout>
                <heading>
                    <HBox>
                        <Label>Ecdar&#160;</Label>
                        <Label>
                            <Ecdar fx:constant="VERSION"/>
                        </Label>
                    </HBox>
                </heading>
                <body>
                    <VBox>
                        <Label styleClass="sub-caption" style="-fx-text-fill: black;">Made by:</Label>
                        <Label styleClass="sub-caption" style="-fx-text-fill: black;">Casper Møller Bartholomæussen
                        </Label>
                        <Label styleClass="sub-caption" style="-fx-text-fill: black;">Tobias Rosenkrantz Gundersen
                        </Label>
                        <Label styleClass="sub-caption" style="-fx-text-fill: black;">Rene Mejer Lauritsen</Label>
                        <Label styleClass="sub-caption" style="-fx-text-fill: black;">Christian Ovesen</Label>
                    </VBox>
                </body>
                <actions>
                    <JFXButton fx:id="aboutAcceptButton" styleClass="dialog-accept">CLOSE</JFXButton>
                </actions>
            </JFXDialogLayout>
        </JFXDialog>
    </StackPane>

    <!-- Backends Dialog -->
    <StackPane fx:id="backendOptionsDialogContainer" style="-fx-background-color: #0000007F;" mouseTransparent="true">
        <BackendOptionsDialogPresentation fx:id="backendOptionsDialog"/>
    </StackPane>
</fx:root>
